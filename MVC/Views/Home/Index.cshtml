
@{
    ViewBag.Title = "Index";
}

<h2>Razor Syntax</h2>
<a href="/Home/About">Go to About</a>

<!--Inline expression statement-->
@*<p>Today Date and Time Is: @DateTime.Now</p>*@
<p>Today Date and Time Is: @DateTime.Now.Year</p>

<!--declaring variables-->
@{//simple C# Coding doing here
    string name = "Learning Never Ends";
    var TodaysTime = DateTime.Now.ToLongDateString();
}

<h2>Channel name is: @name</h2>@*without @ razor syntax its seems normal text after C# variable, so for using C# variable used @ Razor Syntax*@
<h2>Todays time is: @TodaysTime</h2>

<!--Conditional statements-->
@{//Any other conditional statements explore here example:-
    int marks = 75;
    if (marks >= 80)
    {
        <h2>Your Grade is A-1</h2>
    }
    else
    {
        <h2>Your Grade is A</h2>
    }
}

@{
    string fruit = "orange";
    switch (fruit)
    {
        case "banana":
            <h2>You Have Selected Banana</h2>
            break;
        case "apple":
            <h2>You Have Selected Apple</h2>
            break;
        case "pineapple":
            <h2>You Have Selected Pine Apple</h2>
            break;
        default:
            <h2>Invalid Fruit</h2>
            break;
    }
}

Loops
@{
    for (int i = 1; i < 10; i++)
    {
        <h2>@i</h2>//
    }
}

@{
    string[] sports = { "FootBall", "Cricket", "Hockey", "BaseBall" };
    foreach (string i in sports)
    {
        <h2>@i</h2>
    }
}

<!-- View Data -->
<h2>@ViewData["Message"]</h2>
<h2>@ViewData["CurrentTime"]</h2>
<ul>
    @{
        foreach (string i in (string[])ViewData["FruitsArray"])//TypeCasting required here for conversion ViewData["FruitsArray"] into string[]
        {
            <li>@i</li>
        }
    }
</ul>
<ul>
    @{
        foreach (string i in (List<string>)ViewData["SportsList"])
        {
            <li>@i</li>
        }
    }
</ul>
@{
    var a = (MVC.Models.Employee)ViewData["Employee"];
}
<p>@a.EmployeeId</p>
<p>@a.EmployeeName</p>
<p>@a.EmployeeEmail</p>

<!-- View Bag -->
<h2>@ViewBag.Message</h2>
<h2>@ViewBag.CurrentTime</h2>
<ul>
    @{
        foreach (string i in ViewBag.FruitsArray)//Typecasting is no required because of ViewBag is dynamic type
        {
            <li>@i</li>
        }
    }
</ul>
<ul>
    @{
        foreach (string i in ViewBag.SportsList)
        {
            <li>@i</li>
        }
    }
</ul>
@{
    var b = ViewBag.Employee;
}
<p>@b.EmployeeId</p><!--intellisense not working in ViewBag because of dynamic type checks on run time, error also showed on runtime only-->
<p>@b.EmployeeName</p>
<p>@b.EmployeeEmail</p>