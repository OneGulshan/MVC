Notes in MVC
-------------

use this in Package Manager Console if project not works.
Update-Package Microsoft.CodeDom.Providers.DotNetCompilerPlatform -r

DataAnnotations in MVC
-----------------------
[Required]//Default Message
[Required(ErrorMessage = "Name is mandatory")]//Custom Message
[RegularExpression(@"(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$", ErrorMessage = "UpperCase, LowerCase, Numbers, Symbols, 8 Characters")]//@ <- Verbatim Litteral For Esscape Sequences reading as a normal character like \d etc.
[DataType(DataType.Password)]//DataType Only Works With EditorFor
[ReadOnly(true)]//We can't overwrite/insert data here(because Model not Accepted here), so maked field readonly also on View
//Note:- Every DataAnotation its own Default Message but we can declare own Custom Message also using by ErrorMessage.
//if auto required message showed other prop's without data anotation appling please provide null by ? that's prop.
//Required DataAnnotations is must For Performing Other DataAnnotations
<p>@Html.LabelFor(m => m.EmployeeId) &nbsp; @Html.TextBoxFor(m => m.EmployeeId, "", new { @class = "form-control" })</p>//form-control <- bootstrap control
@Html.ValidationMessageFor(m => m.EmployeeId, "", new { @class = "text-danger" })//"" <- No Name of ValidationMessageFor(must declare so, declare empty name)
<p>@Html.LabelFor(m => m.EmpPassword) &nbsp; @Html.EditorFor(m => m.EmpPassword, new { htmlAttributes = new { @class = "form-control" } })</p>//htmlAttributes is the syntax with EditorFor, With EditorFor Bootstrap Worked Automatically
<p>@Html.LabelFor(m => m.EmpOrganisationName) &nbsp; @Html.TextBoxFor(m => m.EmpOrganisationName, new { @Value = "ABC Organisation", @readonly = true })</p>//Value/readonly is the TextBox Attribute


 29.Entity Framework
 --------------------
 Note:- Before we using Ado.Net Classes for Accessing Data from DB in Applications. Now we used EF for Data Accessing using Entity and Models using ORM.
 EF is the type of ORM(Object Releational Mapping) Tool, used For Mapping for Accessing data from Entities and Models. EF works with EDM(Entity Data Model).
 EDM perform Relationships bet Entities(DB Table).
 Diff Bet ADO.Net and EF?
 ADO.Net is an Automated mechanism and EF used Linq for retriving and manipulating data as strongly type objects.

 EF diff approaches to manage data related to apps :- Code First, DataBase First, Model First Approaches.

30. EF Code First Approach
 ---------------------------
 Model to DB approach <- Its a most common approach
 Note:- DbSet for Models set to DB, Keep ConnectionString name same as DataContext class name.
 return View(db.Employees.ToList());//Entity use on View using Model

 Steps:- Install EF, Model, DataContext, ConnectionString(provideName is must), Create Controller, Create View(Manualy).

 -----------------------------------------------------
 Sql Server Name Change:- Win -> Setting -> About -> Rename this PC -> Gulshan -> Restart Now.


